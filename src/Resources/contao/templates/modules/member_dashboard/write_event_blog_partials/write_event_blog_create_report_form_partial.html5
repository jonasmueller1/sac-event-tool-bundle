<?php $GLOBALS['TL_JAVASCRIPT'][] = 'assets/contao-component-vue-js/vue/dist/vue.min.js|static'; ?>

<!-- Modal Box text and youtube -->
<div id="ModalWriteTextAndYt" class="modal fade write-event-blog-text-and-yt" tabindex="-1" role="dialog" aria-labelledby="ModalWriteTextAndYt"
     aria-hidden="true">
  <div class="modal-dialog modal-xl modal-fullscreen-xl-down" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Bericht erstellen</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Schliessen"></button>
      </div>
      <div class="modal-body">
        <div id="editReportFormBox">
          <?= $this->objEventBlogTextAndYoutubeForm ?>
          <p id="ctrl_text_strLenRemaining" class="text-success">
            Verbleibende Zeichen (Leerzeichen inklusive): {{ ctrl_text.strLenRemaining }}
          </p>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  // Vue js
  new Vue({
    el: '#editReportFormBox',
    data: {
      ctrl_text: {
        value: null,
        len: 0,
        strLenRemaining: 0,
      },
    },
    created: function () {
      this.ctrl_text.value = document.getElementById('ctrl_text').value;
      this.ctrl_text.len = document.getElementById('ctrl_text').value.length;
      this.ctrl_text.strLenRemaining = parseInt(document.getElementById('ctrl_text').getAttribute('maxlength')) - this.ctrl_text.len;
      // Cut and append stringRemainig indicator
      this.cutAndAppend(document.getElementById('ctrl_text_strLenRemaining'), document.getElementById('ctrl_text').parentElement);
    },
    methods: {
      onKeyUp: function (elemId) {
        if (elemId === 'ctrl_text') {
          this.ctrl_text.len = document.getElementById('ctrl_text').value.length;
          this.ctrl_text.strLenRemaining = parseInt(document.getElementById('ctrl_text').getAttribute('maxlength')) - this.ctrl_text.len;
        }
      },
      cutAndAppend: function (elem, parentNode) {
        childElem = elem.parentElement.removeChild(elem);
        parentNode.appendChild(childElem);
      }
    }
  })
</script>

<script>
  // Open modal on error
  (function ($) {
    jQuery(document).ready(function () {
      if ($('#ModalWriteTextAndYt .widget.error').length) {
        let modal = new bootstrap.Modal(document.getElementById('ModalWriteTextAndYt'));
        modal.show();
      }
    });
  })(jQuery);
</script>