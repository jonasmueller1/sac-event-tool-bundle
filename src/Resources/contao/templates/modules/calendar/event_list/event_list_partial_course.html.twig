{% do addJavascriptResource('assets/contao-component-vue-js/vue/dist/vue.min.js|static') %}
{% do addJavascriptResource('bundles/markocupicsaceventtool/js/eventlist_vue.js|static') %}

<div id="course-list">
    <span v-if="itemsTotal > 0" class="text-muted"><small>Zu deiner Suchanfrage wurden <% itemsTotal %> Events gefunden. </small></span>
    <span v-if="blnIsBusy === true" class="ms-2 text-success"><small>Lade events...</small></span>
    <div class="event-container row">

        <div v-for="(row, index) of rows" class="col-xl-6 event-item event-item-course event layout_upcoming" v-bind:data-id="row.id" v-bind:data-event-type="row.courseTypeLevel1">
            <div class="row">
                <!-- Start left col -->
                <div class="col-sm-3 col-xl-5 d-none d-sm-block image-zoom-in">
                    <a v-bind:href="row.eventUrl" data-has-event-href="true" v-bind:data-href="row.eventUrl" v-bind:title="row.title" v-html="row.eventImage" class="responsive event-title-link"></a>
                </div>
                <!-- Start right col -->
                <div class="col-sm-9 col-xl-7">
                    <div class="title d-flex align-items-start mb-2">
                        <span class="event-state-icon lh-base pt-1" data-bs-toggle="tooltip" data-placement="top" v-bind:aria-label="row.eventStateLabel" v-bind:title="row.eventStateLabel" v-bind:class="row.eventState"> </span>
                        <a v-bind:href="row.eventUrl" data-has-event-href="true" v-bind:data-href="row.eventUrl" class="event-title-link lh-base">
                            <h4 class="d-flex headline m-0 p-0 lh-base">
                                <% row.title %>
                            </h4>
                        </a>
                    </div>
                    <div class="detail-item">
                        <strong><% row.courseTypeLevel0Name %>: <% row.courseTypeLevel1Name %></strong>
                    </div>
                    <div class="detail-item">
                        <i class="fa fa-fw fa-user"></i> <span>Leitung: <% row.instructorsWithQualification %></span>
                    </div>
                    <div class="detail-item">
                        <i class="fa fa-fw fa-calendar-alt"></i>
                        <span v-html="row.eventPeriodLgInline"></span>
                    </div>
                    <div class="detail-item">
                        <div v-html="row.bookingCounter" class="me-1"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div v-if="blnIsBusy === true">
        <div class="d-flex mt-4 justify-content-center">
            <div mt-3 mb-3><i class="fal fa-5x fa-circle-notch fa-spin"></i></div>
        </div>
        <div class="d-flex justify-content-center">
            <div class="mt-3 mb-3">... lade Events ...</div>
        </div>
    </div>

    <div v-if="blnIsBusy === false && blnAllEventsLoaded === false" v-on:click="prepareRequest()">
        <div class="d-flex justify-content-center">
            <button class="btn btn-lg btn-outline-primary mt-4 ps-5 pe-5">Weitere Events laden?</button>
        </div>
    </div>

    <div v-if="blnIsBusy === false && !itemsTotal" class="alert alert-info">
        Zu deiner Suchanfrage wurden leider keine Events gefunden.
    </div>
</div>

<!-- Set up the vue.js course list -->
<script>
    new VueTourList('#course-list', {
        'modId': {{ id }},
        'apiParams': {
            'organizers': [{{ apiParam.organizers|raw }}],
            'eventType': [{{ apiParam.eventType|raw }}],
            'tourType': '{{ apiParam.tourType|raw }}',
            'courseType': '{{ apiParam.courseType|raw }}',
            'courseId': '{{ apiParam.courseId|raw }}',
            'year': '{{ apiParam.year|raw }}',
            'dateStart': '{{ apiParam.dateStart|raw }}',
            'textsearch': '{{ apiParam.textsearch|raw }}',
            'eventId': '{{ apiParam.eventId|raw }}',
            'arrIds': [{{ apiParam.arrIds|raw }}],
            'username': '{{ apiParam.username|raw }}',
            'calendarIds': [{{ apiParam.calendarIds|raw }}],
            'limit': '{{ apiParam.limit|raw }}',
            'offset': '0',
        },
        'fields': [
            'id',
            'title',
            'eventUrl',
            'courseTypeLevel1',
            'eventImage||{{ pictureId }}',
            'courseTypeLevel0Name',
            'courseTypeLevel1Name',
            'instructorsWithQualification',
            'eventPeriodLgInline',
            'bookingCounter',
            'eventStateLabel',
            'eventState',
        ],
        'callbacks': {
            'oninsert': async function (vue, json) {
                // Wait still DOM is ready
                await new Promise(resolve => setTimeout(resolve, 100));

                // Cache the event list object in the localStorage
                // before redirecting to the detail page
                await new Promise((resolve, reject) => {
                    let buttons = document.querySelectorAll(vue.elId + ' [data-has-event-href="true"]');
                    buttons.forEach((button) => {
                        button.addEventListener('click', (event) => {
                            event.stopPropagation();
                            event.preventDefault();
                            let link = button.getAttribute('data-href');

                            let eventBox = button.closest('.event-item');
                            let eventId = eventBox.dataset.id;

                            let url = new URL(window.location.href);
                            let urlParams = new URLSearchParams(url.search);
                            let href = window.location.protocol + '//' + window.location.hostname + window.location.pathname;

                            if (urlParams.has('itemId')) {
                                urlParams.set('itemId', eventId);
                            } else {
                                urlParams.append('itemId', eventId);
                            }

                            // Current URL: https://my-website.com/page_a.html?event=200
                            const nextURL = href + '?' + urlParams.toString();
                            const nextTitle = document.title; // keep the same title

                            // This will create a new entry in the browser's history, without reloading
                            window.history.replaceState({}, nextTitle, nextURL);

                            let vueInstance = {
                                'rows': vue.rows,
                                'arrEventIds': vue.arrEventIds,
                                'itemsTotal': vue.itemsTotal,
                                'loadedItems': vue.loadedItems,
                                'blnAllEventsLoaded': vue.blnAllEventsLoaded,
                                'expiry': Date.now() + 5 * 60 * 1000,
                            }

                            // Save the vue instance to the local storage.
                            // This saves us a time-consuming request,
                            // if the user clicks backs from the detail module to the listing module
                            localStorage.setItem(btoa(nextURL + '&modId=' + vue.modId), JSON.stringify(vueInstance));

                            // Redirect to detail page
                            window.location.href = link;

                        });

                    });

                    resolve('done!');
                }).catch((error) => console.log(error));

                // Re-initialize Bootstrap/Popper tooltips
                await new Promise((resolve, reject) => {
                    let tooltipTriggerList = [].slice.call(document.querySelectorAll(vue.elId + ' [data-bs-toggle="tooltip"]'))
                    tooltipTriggerList.map(function (tooltipTriggerEl) {
                        return new bootstrap.Tooltip(tooltipTriggerEl);
                    })

                    resolve('done');
                }).catch((error) => console.log(error));
            }
        }
    });
</script>

